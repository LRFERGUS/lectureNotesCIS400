Milestone 11: due Friday


Next week: POST requests
    one more milestone (#12)

Optional final.
    1:30 section: Tuesday, May 13 11:50 am - 1:40 pm
    2:30 section: Thursday, May 15 4:10-6:00 pm 


Using what if for exams.



--> Website competition



--> I need to hire a new CIS 301 TA for the fall. If you are interested,
    email me to let me know before the end of next week.



////////////////////////

LINQ queries.



//suppose items is an IEnumerable<SomeType>


IEnumerable<SomeType> keep = items.Where(item => 
                                (some condition about item));


Or could write:
IEnumerable<SomeType> keep = from item in items 
                        where (some condition about item)
                        select item;



//////////////////////

Example: return collection of people whose name begins with the letter
and whose age is between the bounds

(Assume Person has Name/Age properties)



public IEnumerable<Person> Filter(IEnumerable<Person> list, uint minAge,
                                 uint maxAge, char firstLetter) 
{

    return list.Where(p => p.Age >= minAge && p.Age <= maxAge && p.Name[0] == firstLetter);
}






////////////////////

Example 

- suppose Employee, Student both extend Person
- suppose Student has a GPA property



--> return collection of honor roll (3.5+ GPA) students

public IEnumerable<Person> HonorRoll(IEnumerable<Person> list) 
{
    return list.Where(p => p is Student s && s.GPA >= 3.5);


}


////////////////////

Example: how to revise above method to put in alphabetical order by name?

public IEnumerable<Person> HonorRoll(IEnumerable<Person> list) 
{

    return list.Where(p => p is Student s && s.GPA >= 3.5).OrderBy(s => s.Name);
}


OrderByDescending


////////////////////

Why LINQ instead of manual?


more efficient, less code


////////////////////

Milestone 11 testing.

- price filter (min/max price):
    test correct if both null -> shouldn't filter anything
    test correct if just one null 
    test correct if given both min/max: 
        what kinds of min/max values?
            min is 0
            max is either the max from the input or a really big number
            min equals the max
            "normal" test case (5-15), maybe a couple



        make sure each item in the result has a price in given range
        make sure each item in menu whose price is in that range 
            is in the result

    Assert.Contains, Assert.All

- cals filter (min/max cals): same idea



- keyword filter (big string that is all the keywords):
    test correct if null or empty -> shouldn't filter anything

    test actual keywords
        Option 1) Try searching the whole menu
        Option 2) Create your own smaller menu (recommended)


        keywords to test: one word, multiple keywords, mixed case
            "tall" - drinks (all)
            "TalL" - same
            "tall coffee xyz" - none
            "tall coffee" - just the tall coffee
            "coffee tall" - still just the tall coffe
            "TALL COFFEE" - still the same
            "jack triple veggie" - BYO with that customization, not veggie
            "jack double veggie" - BYO with that customization, also veggie 


///////////////////

Milestone 11 UML:

    Index
    Static Menu