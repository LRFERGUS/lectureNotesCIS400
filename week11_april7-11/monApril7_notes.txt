UML in WPF tutorial: due Monday
Milestone 9: due Friday


Exam 2: Wednesday, April 16

--> will post review materials for next week's module
--> Mon April 14 will be an exam review day
--> no milestone/tutorials due next week
--> all tutorials/milestones since Exam 1 must be turned in by
    Fri April 18 for any partial credit

--> we will start on Razor pages after the exam

////////////////////////////////////

Milestone 9.
- Update UML to match current state of your application

- Unit test updates from Milestones 7-8

- Integration testing


//////////////////////////////////

UML considerations:
- denote the namespaces (how?)
    1) make two tabs - one DairyBarn.Data, one DairyBarn.PointOfSale
    2) use UML "package" control 


- fully qualify class (what does that mean?) if referring to a class
    from a different namespace

    DairyBarn.Data.Order


- indicate that MainWindow extends Window 


- indicate that EVERY user control extends UserControl 


- include all named controls, public properties/methods/events, and
    event handlers (even if private) in UML


- indicate the DataContext of EVERY control (unless it is inheriting
    from a parent control). This is an aggregation relationship
        (diamond touches the control/window)

        MainWindow: ? Order
        Payment control: ? PaymentViewModel (library issues -
            need to move PaymentViewModel to Data project to work with tests)
        
        all customization controls: the corresponding menu item

    if the relationship is 1-1, don't need to put multiplicities on UML
    SHOULD put multiplicities in any other relationship



- indicate whenever a control is placed on another control
    MainWindow has? order summary, menu control, customization controls,
        payment control
    all customization controls have? sometimes, a count box,
        ALL have that helper control (with name/descr./calories)


///

--> recommendation: have sections on your UML:
    - one for inheriting Window/UserControl
    - one to show the DataContexts
    - one to show the composition of controls on other controls



--> custom event args?
    extends RoutedEventArgs
    IMenuItem property (custom event args HAS an IMenuItem)
        aggregation, diamond touches CustomEventArgs

    look where custom event args is used in different controls.
    want to indicate when it is a type of event or a parameter to
        an event handler

    directed association to point to the class we need
    arrow from user control/window to the custom event args


    (might want to put this in a new area on the UML)



--> PaymentViewModel? 
    DataContext for the payment control
    probably has a field/property that is an Order
    PaymentViewModel HAS an Order (aggregation)
        diamond touches the PaymentViewModel
    implements INotifyPropertyChanged



--> UML changes in Data project?
    IMenuItem? implements INotifyPropertyChanged

    PickTwo, Burger, IceCream, Drink?
        PropertyChanged event itself

    PickTwo?
        list of burger types, ice cream types


    Burger?
        bool for part of pick two


    BurgerIngredient implements..? INotifyPropertyChanged
        should be on UML
        PropertyChanged event



//////////////////////////////////

Unit tests.

Each menu item unit test class:
- test the menu item implements INotifyPropertyChanged
        Assert.IsAssignableFrom

- for the corresponding menu item:
    --> think of which properties can change (either with a set 
        or as a result of other properties changing)
    --> test ALL combinations of (changingProperty, affectedProperty)
        to ensure PropertyChanged is invoked

        winter swirl: mix in choice?

        Calories, PreparationInformation, MixInChoice

        want to test that when I try changing mix in, 
            PropertyChanged for calories
            PropertyChanged for price
            PropertyChanged for PreparationInformation


--> also, for EACH burger type: try changing its ingredients to be
    included/not included. Assert that such changes invoke
    PropertyChanged for that burger

        Which properties change? Calories, Price, PreparationInformation



    (you should also do this for drink/ice cream if its customizations involve
    a similar dictionary)



--> for PickTwo: try changing burger/ice cream choice, assert that
    PropertyChanged is correctly invoked for?
        Price, Calories, PreparationInformation



    (it is OK if you do this with specific entrees/sides/drinks)
    (you don't need to check anything with further customizations)




--> also complete the integration tests described for PaymentViewModel.


////////////////////////

Example: Coffee

- implements INotifyPropertyChanged
- what properties can change? 
    size, cream, sugar, iced, decaf

    size impacts: calories, price, preparation information, size
    cream impacts: cream, calories, preparation information 
    sugar impacts: sugar, calories, preparation information 
    iced impacts: preparation information, iced
    decaf impacts: calories, preparation information, decaf

    

    --> What properties are affected as a result of that change?

    --> how to write one of the tests (check size change properties)

changing cream test:


[Theory]
[InlineData(true, "Calories")]
[InlineData(true, "PreparationInformation")]
[InlineData(true, "Cream")]
[InlineData(false, "Calories")]
[InlineData(false, "PreparationInformation")]
[InlineData(false, "Cream")]
public void ChangingCreamShouldNotifyOfPropertyChanged(bool cream, string property) {
    Coffee c = new();

    Assert.PropertyChanged(c, property, () => {
        c.Cream = cream;
    });
}