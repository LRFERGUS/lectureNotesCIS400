Milestone 6 due Friday

Will publish next module Friday (w/ Milestone 7) in case you want
    to start over break (nothing due until week after break)

//////////////////////////

Today:
- formatting ListView
- INotifyPropertyChanged
- Testing
- UML

/////////////////////////

Displaying name/price/remove capability of each item in Order Summary:

<ListView HorizontalContentAlignment="Stretch" ItemsSource="{Binding}">
    <ListView.ItemTemplate>
        <DataTemplate>
            <StackPanel>
                //how to get the alignment of name/price?
                <DockPanel>
                    have price, dock to right
                    have name, dock to left
                </DockPanel>

                //have remove button
                <Button Click="HandleRemove">Remove</Button>

            </StackPanel>
        </DataTemplate>
    </ListView.ItemTemplate>
</ListView>

How to get name/price to stretch?

/////////////////////////////

Need order summary to update subtotal/tax/total as you add/remove items

Answer: Order implements INotifyPropertyChanged


public event PropertyChangedEventHandler? PropertyChanged;


Need to invoke PropertyChanged whenever something happens that changes
    the value of a property

    


PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(nameof(PropertyName)));


--> user controls are subscribed to the PropertyChanged event for their DataContext
    --> if the control uses data binding with the affected property, it
        will automatically rerender itself



When do we need to invoke PropertyChanged? For what properties?
    Add, Clear, Remove

    impacts: Subtotal, Tax, Total
    PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(nameof(PropertyName)));


Also: TaxRate
    tax rate changes impact: Tax, Total, TaxRate


/////////////////////////

Testing.

--> make sure Order number increases by 1 each time

    Order o1 = new();
    Order o2 = new();
    assert o1's number +1 is o2's number



--> make sure Number/PlacedAt don't change when requested more
    than once

    save out the Number in a variable
    assert that the variable matches current Number


--> make sure Order implements INotifyCollectionChanged, INotifyPropertyChanged

--> make sure Order invokes PropertyChanged when it should

Example:

[Theory]
[InlineData("Subtotal")]
public void SubtotalChangesWhenAdding(string property) {
    Order o = new();
    Assert.PropertyChanged(o, property, () => {
        o.Add(new MockMenuItem());
    });
}

test remove, clear

also test tax rate: only difference is code in assert should change tax rate

////////////////////

UML?
    PointOfSale - remove click event, cancel click event
        show that MainWindow has an DairyBarn.Data.Order 
    Data - Order
        implementing 2 new interfaces 
        list the two events
        new properties (PlacedAt, Number)